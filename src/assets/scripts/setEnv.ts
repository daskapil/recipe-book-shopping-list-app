/* tslint:disable */
// @ts-nocheck

// import the methods to be used using
const { writeFile, existsSync, mkdirsync } = require('fs');
const { argv } = require('yargs');

/* 
Configure dotenv to pass all the environment variables from the .env file into process.env. 
Additionally, we will use yargs to read the command-line arguments passed 
( — environment=prod or — environment=dev) when this file is called.
*/
require('dotenv').config();
const environment = argv.environment;

/* 
Helper function that allows us to copy the dynamically generated environment 
variables into their respective files. In case the file does not exist, it will 
create a new file in the given path. 
*/
function writeFileUsingFs(targetPath, environmentFileContent) {
    writeFile(targetPath, environmentFileContent, function (err) {
        if (err) {
            console.log(err);
        }

        if (environmentFileContent !== '') {
            console.log(`Wrote variables to ${targetPath}`);
        }
    });
}

// Providing path to the 'environment' directory
const envDirectory = './src/environments';

// Creates the 'environments' directory if it does not exist
if (!existsSync(envDirectory)) {
    mkdirsync(envDirectory);
}

// Creates the 'environments.prod.ts' and 'environments.ts' files if they do not exist
const prodTargetPath = `${envDirectory}/environments.prod.ts`;
const testTargetPath = `${envDirectory}/environments.ts`;

writeFileUsingFs(prodTargetPath, '');
writeFileUsingFs(testTargetPath, '');

/* 
Finally, we dynamically generate the environment variables specific to the environment 
chosen that contains the secret API keys. For local development (npm run serve), the 
environment variables will be added to environment.ts, whereas for the production 
environment (npm run build), they will be added to the environment.prod.ts file 
*/

// Chekcs whether command Line argument of 'prod' was provided - signifies Production mode
const isProd = environment === 'prod';

// Choose the correct targetPath based on the environment
const targetPath = isProd ? prodTargetPath : testTargetPath;

// Actual content oto be complied dynamically and passed into respoective environment files
const environmentFileContent = `
  // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
  
  export const environment = {
    production: ${isProd},
    FIREBASE_API_KEY: '${process.env.API_KEY}'
  };
`;

// Appending data into the target file
writeFileUsingFS(targetPath, environmentFileContent); 

/* tslint:enable */